{"version":3,"sources":["script.js"],"names":["console","log","billInput","document","getElementById","tipBtns","querySelectorAll","tipInput","peopleInput","tipAmountPersonHTML","totalPersonHTML","resetBTN","containerLeft","billValue","tipValue","peopleValue","onlyNumbers","event","newValue","target","value","replace","trim","resetValues","forEach","btn","classList","remove","innerHTML","splitterOperations","tipAmountPerson","totalPerson","Number","toFixed","addEventListener","add","removeEventListener","isNaN","getAttribute","isRequired","notZero","showError","input","message","formField","parentElement","querySelector","textContent","deleteError","checkBillInput","valid","inputValue","checkPeopleInput","e","id"],"mappings":"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","file":"script.js","sourcesContent":["console.log(\"HELLO\")\r\n\r\nconst billInput = document.getElementById(\"bill-Input\");\r\nconst tipBtns = document.querySelectorAll(\".tipBtn\");\r\nconst tipInput = document.getElementById(\"tip-Input\");\r\nconst peopleInput = document.getElementById(\"numberOfPeople-Input\");\r\nconst tipAmountPersonHTML = document.getElementById(\"tipAmount/Person\");\r\nconst totalPersonHTML = document.getElementById(\"total/Person\");\r\nconst resetBTN = document.getElementById(\"resetBTN\");\r\nconst containerLeft = document.getElementById(\"container-left\");\r\n\r\nlet billValue = \"\";\r\nlet tipValue = \"\";\r\nlet peopleValue = \"\";\r\n\r\n\r\n//Function to make inputs accept only numbers\r\nconst onlyNumbers = (event) => {\r\n  const value = event.target.value;\r\n  const newValue = value.replace(/[^0-9]/g, '').trim();\r\n  event.target.value = newValue;\r\n}\r\n\r\nconst resetValues = () => {\r\n  billInput.value = \"\";\r\n  billValue = \"\";\r\n  tipBtns.forEach((btn) => {\r\n    btn.classList.remove(\"active\")\r\n  })\r\n  tipInput.value = \"\";\r\n  tipValue = \"\";\r\n  peopleInput.value = \"\";\r\n  peopleValue = \"\";\r\n\r\n  tipAmountPersonHTML.innerHTML = \"$0.00\";\r\n  totalPersonHTML.innerHTML = \"$0.00\";\r\n\r\n  splitterOperations();\r\n}\r\n\r\n//Function to make all the operations and actions\r\nconst splitterOperations = () => {\r\n  let tipAmountPerson = \"\";\r\n  let totalPerson = \"\";\r\n\r\n  if ((billValue != \"\" && Number(billValue) != 0) && tipValue != \"\" && (peopleValue != \"\" && Number(peopleValue) != 0)) {\r\n    tipAmountPerson = (billValue * (tipValue / 100)) / peopleValue;\r\n    totalPerson = (billValue * (1 + (tipValue / 100)) / peopleValue);\r\n\r\n    tipAmountPersonHTML.innerHTML = \"$\" + Number(tipAmountPerson).toFixed(2);\r\n    totalPersonHTML.innerHTML = \"$\" + Number(totalPerson).toFixed(2);\r\n\r\n    resetBTN.classList.remove(\"inactive\");\r\n    resetBTN.addEventListener('click', resetValues);\r\n\r\n  } else {\r\n    tipAmountPersonHTML.innerHTML = \"$0.00\";\r\n    totalPersonHTML.innerHTML = \"$0.00\";\r\n    resetBTN.classList.add(\"inactive\");\r\n    resetBTN.removeEventListener('click', resetValues);\r\n  }\r\n} \r\n\r\n//Inputs and btns EventListeners\r\nbillInput.addEventListener('input', (event) => {\r\n  const value = billInput.value;\r\n  if (!isNaN(value)) {\r\n    billValue = billInput.value;\r\n    splitterOperations();\r\n  }\r\n\r\n  onlyNumbers(event);\r\n});\r\n\r\ntipBtns.forEach((btn) => {\r\n  btn.addEventListener('click', () => {\r\n    tipInput.value = \"\";\r\n\r\n    tipBtns.forEach((btn) => {\r\n      btn.classList.remove(\"active\");\r\n    })\r\n\r\n    btn.classList.add(\"active\");\r\n    tipValue = btn.getAttribute(\"tip-percentage\");\r\n\r\n    splitterOperations();\r\n  })\r\n})\r\n\r\ntipInput.addEventListener('input', (event) => {\r\n  const value = tipInput.value;\r\n  if (!isNaN(value)) {\r\n    tipBtns.forEach((btn) => btn.classList.remove(\"active\"));\r\n    tipValue = tipInput.value;\r\n\r\n    splitterOperations();\r\n  }\r\n\r\n  onlyNumbers(event);\r\n})\r\n\r\npeopleInput.addEventListener('input', (event) => {\r\n  const value = peopleInput.value;\r\n  if (!isNaN(value)) {\r\n    peopleValue = peopleInput.value;\r\n    splitterOperations();\r\n  }\r\n\r\n  onlyNumbers(event);\r\n});\r\n\r\n\r\n\r\n//Form validation section\r\n\r\n//Validation Functions\r\nconst isRequired = value => value === '' ? false : true;\r\nconst notZero = value => Number(value) === 0 ? false : true;\r\n\r\n//Functions that shows and eliminates \"error\"\r\nconst showError = (input, message) => {\r\n\r\n  const formField = input.parentElement;\r\n\r\n  formField.classList.remove('success');\r\n  formField.classList.add('error');\r\n\r\n  const error = formField.querySelector('small');\r\n  error.textContent = message;\r\n};\r\n\r\nconst deleteError = (input) => {\r\n  const formField = input.parentElement;\r\n\r\n  formField.classList.remove('error');\r\n\r\n  const error = formField.querySelector('small');\r\n  error.textContent = '';\r\n}\r\n\r\n//Validate Inputs\r\nconst checkBillInput = () => {\r\n  let valid = false;\r\n  const inputValue = billInput.value.trim();\r\n\r\n  if (!isRequired(inputValue)) {\r\n    showError(billInput, \"Bill can't be blank\");\r\n  } else if (!notZero(inputValue)) {\r\n    showError(billInput, \"Bill can't be zero\");\r\n  } else {\r\n    deleteError(billInput);\r\n    valid = true;\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\nconst checkPeopleInput = () => {\r\n  let valid = false;\r\n  const inputValue = peopleInput.value.trim();\r\n\r\n  if (!isRequired(inputValue)) {\r\n    showError(peopleInput, \"People can't be blank\");\r\n  } else if (!notZero(inputValue)) {\r\n    showError(peopleInput, \"People can't be zero\");\r\n  } else {\r\n    deleteError(peopleInput);\r\n    valid = true;\r\n  }\r\n\r\n  return valid;\r\n}\r\n\r\n//Call to validate functions when there's a user types\r\ncontainerLeft.addEventListener('input', function (e) {\r\n  switch (e.target.id) {\r\n    case 'bill-Input':\r\n      checkBillInput();\r\n      break;\r\n    case 'numberOfPeople-Input':\r\n      checkPeopleInput();\r\n      break;\r\n  }\r\n})"]}